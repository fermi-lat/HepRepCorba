// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

// TAO_IDL - Generated from
// be\be_codegen.cpp:151

#ifndef _TAO_IDL_HEPEVENTSERVERC_H_
#define _TAO_IDL_HEPEVENTSERVERC_H_


#include "tao/corba.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include "HepRepC.h"

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO 

#if defined (TAO_EXPORT_NESTED_CLASSES)
#  if defined (TAO_EXPORT_NESTED_MACRO)
#    undef TAO_EXPORT_NESTED_MACRO
#  endif /* defined (TAO_EXPORT_NESTED_MACRO) */
#  define TAO_EXPORT_NESTED_MACRO 
#endif /* TAO_EXPORT_NESTED_CLASSES */

#if defined(_MSC_VER)
#if (_MSC_VER >= 1200)
#pragma warning(push)
#endif /* _MSC_VER >= 1200 */
#pragma warning(disable:4250)
#endif /* _MSC_VER */

#if defined (__BORLANDC__)
#pragma option push -w-rvl -w-rch -w-ccc -w-inl
#endif /* __BORLANDC__ */

// TAO_IDL - Generated from
// e:\ric\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:52

#if !defined (_HEPEVENTSERVER___PTR_CH_)
#define _HEPEVENTSERVER___PTR_CH_

class HepEventServer;
typedef HepEventServer *HepEventServer_ptr;

#endif /* end #if !defined */

#if !defined (_HEPEVENTSERVER___VAR_CH_)
#define _HEPEVENTSERVER___VAR_CH_

// TAO_IDL - Generated from
// be\be_interface.cpp:565

class  HepEventServer_var : public TAO_Base_var
{
public:
  HepEventServer_var (void); // default constructor
  HepEventServer_var (HepEventServer_ptr p) : ptr_ (p) {} 
  HepEventServer_var (const HepEventServer_var &); // copy constructor
  ~HepEventServer_var (void); // destructor
  
  HepEventServer_var &operator= (HepEventServer_ptr);
  HepEventServer_var &operator= (const HepEventServer_var &);
  HepEventServer_ptr operator-> (void) const;
  
  operator const HepEventServer_ptr &() const;
  operator HepEventServer_ptr &();
  // in, inout, out, _retn 
  HepEventServer_ptr in (void) const;
  HepEventServer_ptr &inout (void);
  HepEventServer_ptr &out (void);
  HepEventServer_ptr _retn (void);
  HepEventServer_ptr ptr (void) const;
  
  // Hooks used by template sequence and object manager classes
  // for non-defined forward declared interfaces.
  static HepEventServer_ptr tao_duplicate (HepEventServer_ptr);
  static void tao_release (HepEventServer_ptr);
  static HepEventServer_ptr tao_nil (void);
  static HepEventServer_ptr tao_narrow (
      CORBA::Object *
      ACE_ENV_ARG_DECL_NOT_USED
    );
  static CORBA::Object * tao_upcast (void *);

private:
  HepEventServer_ptr ptr_;
  // Unimplemented - prevents widening assignment.
  HepEventServer_var (const TAO_Base_var &rhs);
  HepEventServer_var &operator= (const TAO_Base_var &rhs);
};

#endif /* end #if !defined */

#if !defined (_HEPEVENTSERVER___OUT_CH_)
#define _HEPEVENTSERVER___OUT_CH_

// TAO_IDL - Generated from
// be\be_interface.cpp:940

class  HepEventServer_out
{
public:
  HepEventServer_out (HepEventServer_ptr &);
  HepEventServer_out (HepEventServer_var &);
  HepEventServer_out (const HepEventServer_out &);
  HepEventServer_out &operator= (const HepEventServer_out &);
  HepEventServer_out &operator= (const HepEventServer_var &);
  HepEventServer_out &operator= (HepEventServer_ptr);
  operator HepEventServer_ptr &();
  HepEventServer_ptr &ptr (void);
  HepEventServer_ptr operator-> (void);

private:
  HepEventServer_ptr &ptr_;
};

#endif /* end #if !defined */

// TAO_IDL - Generated from
// e:\ric\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:110

#if !defined (_HEPEVENTSERVER_CH_)
#define _HEPEVENTSERVER_CH_

class _TAO_HepEventServer_Proxy_Impl;
class _TAO_HepEventServer_Remote_Proxy_Impl;
class _TAO_HepEventServer_Proxy_Broker;
class _TAO_HepEventServer_Remote_Proxy_Broker;

class  HepEventServer
  : public virtual CORBA::Object
{
public:
  typedef HepEventServer_ptr _ptr_type;
  typedef HepEventServer_var _var_type;
  static int _tao_class_id;
  
  // The static operations.
  static HepEventServer_ptr _duplicate (HepEventServer_ptr obj);
  
  static HepEventServer_ptr _narrow (
      CORBA::Object_ptr obj
      ACE_ENV_ARG_DECL_WITH_DEFAULTS
    );
  
  static HepEventServer_ptr _unchecked_narrow (
      CORBA::Object_ptr obj
      ACE_ENV_ARG_DECL_WITH_DEFAULTS
    );
  
  static HepEventServer_ptr _nil (void)
    {
      return (HepEventServer_ptr)0;
    }
  
  static void _tao_any_destructor (void *);
  
  // TAO_IDL - Generated from
  // e:\ric\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
  
  virtual char * attach (
      const char * clientDesc
    )
    ACE_THROW_SPEC ((
      CORBA::SystemException
    ));
  
  // TAO_IDL - Generated from
  // e:\ric\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
  
  virtual void release (
      
    )
    ACE_THROW_SPEC ((
      CORBA::SystemException
    ));
  
  // TAO_IDL - Generated from
  // e:\ric\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
  
  virtual char * setEvent (
      const char * eventID
    )
    ACE_THROW_SPEC ((
      CORBA::SystemException
    ));
  
  // TAO_IDL - Generated from
  // e:\ric\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
  
  virtual CORBA::Long getNumberOfEvents (
      
    )
    ACE_THROW_SPEC ((
      CORBA::SystemException
    ));
  
  // TAO_IDL - Generated from
  // e:\ric\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
  
  virtual char * getEventTitle (
      
    )
    ACE_THROW_SPEC ((
      CORBA::SystemException
    ));
  
  // TAO_IDL - Generated from
  // e:\ric\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
  
  virtual ::HepRep_ptr getEventData (
      const char * dataFormat
    )
    ACE_THROW_SPEC ((
      CORBA::SystemException
    ));
  
  // TAO_IDL - Generated from
  // e:\ric\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:267
  
  virtual CORBA::Boolean _is_a (
      const char *type_id
      ACE_ENV_ARG_DECL_WITH_DEFAULTS
    );
  
  virtual void *_tao_QueryInterface (ptr_arith_t type);
  
  virtual const char* _interface_repository_id (void) const;
private:
  _TAO_HepEventServer_Proxy_Broker *the_TAO_HepEventServer_Proxy_Broker_;

protected:
  HepEventServer (int collocated = 0);
  
  // These methods travese the inheritance tree and set the
  // parents piece of the given class in the right mode.
  virtual void HepEventServer_setup_collocation (int collocated);
  
  HepEventServer (
      TAO_Stub *objref, 
      CORBA::Boolean _tao_collocated = 0,
      TAO_Abstract_ServantBase *servant = 0
    );
  virtual ~HepEventServer (void);
  
  friend class _TAO_HepEventServer_Remote_Proxy_Impl;
  friend class _TAO_HepEventServer_ThruPOA_Proxy_Impl;
  friend class _TAO_HepEventServer_Direct_Proxy_Impl;

private:
  HepEventServer (const HepEventServer &);
  void operator= (const HepEventServer &);
};

// The Proxy Implementations are used by each interface to
// perform a call. Each different implementation encapsulates
// an invocation logic.


///////////////////////////////////////////////////////////////////////
//                    Base Proxy Impl. Declaration
//

// TAO_IDL - Generated from
// e:\ric\ace_wrappers\tao\tao_idl\be\be_visitor_interface/base_proxy_impl_ch.cpp:35

class  _TAO_HepEventServer_Proxy_Impl
  : public virtual TAO_Object_Proxy_Impl
{
public:
  virtual ~_TAO_HepEventServer_Proxy_Impl (void) {}
  
  // TAO_IDL - Generated from
  // e:\ric\ace_wrappers\tao\tao_idl\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
  
  virtual char * attach (
      CORBA_Object *_collocated_tao_target_,
      const char * clientDesc
    )
    ACE_THROW_SPEC ((
      CORBA::SystemException
    )) = 0;
  
  // TAO_IDL - Generated from
  // e:\ric\ace_wrappers\tao\tao_idl\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
  
  virtual void release (
      CORBA_Object *_collocated_tao_target_
    )
    ACE_THROW_SPEC ((
      CORBA::SystemException
    )) = 0;
  
  // TAO_IDL - Generated from
  // e:\ric\ace_wrappers\tao\tao_idl\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
  
  virtual char * setEvent (
      CORBA_Object *_collocated_tao_target_,
      const char * eventID
    )
    ACE_THROW_SPEC ((
      CORBA::SystemException
    )) = 0;
  
  // TAO_IDL - Generated from
  // e:\ric\ace_wrappers\tao\tao_idl\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
  
  virtual CORBA::Long getNumberOfEvents (
      CORBA_Object *_collocated_tao_target_
    )
    ACE_THROW_SPEC ((
      CORBA::SystemException
    )) = 0;
  
  // TAO_IDL - Generated from
  // e:\ric\ace_wrappers\tao\tao_idl\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
  
  virtual char * getEventTitle (
      CORBA_Object *_collocated_tao_target_
    )
    ACE_THROW_SPEC ((
      CORBA::SystemException
    )) = 0;
  
  // TAO_IDL - Generated from
  // e:\ric\ace_wrappers\tao\tao_idl\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
  
  virtual ::HepRep_ptr getEventData (
      CORBA_Object *_collocated_tao_target_,
      const char * dataFormat
    )
    ACE_THROW_SPEC ((
      CORBA::SystemException
    )) = 0;

protected:
  _TAO_HepEventServer_Proxy_Impl (void);
};

//
//               End Base Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////


///////////////////////////////////////////////////////////////////////
//                Remote Proxy Impl. Declaration
//

// TAO_IDL - Generated from
// e:\ric\ace_wrappers\tao\tao_idl\be\be_visitor_interface/remote_proxy_impl_ch.cpp:37

class  _TAO_HepEventServer_Remote_Proxy_Impl
  : public virtual _TAO_HepEventServer_Proxy_Impl,
    public virtual TAO_Remote_Object_Proxy_Impl
{
public:
  _TAO_HepEventServer_Remote_Proxy_Impl (void);
  
  virtual ~_TAO_HepEventServer_Remote_Proxy_Impl (void) {}
  
  // TAO_IDL - Generated from
  // e:\ric\ace_wrappers\tao\tao_idl\be\be_visitor_operation/proxy_impl_xh.cpp:24
  
  virtual char * attach (
      CORBA_Object *_collocated_tao_target_,
      const char * clientDesc
    )
    ACE_THROW_SPEC ((
      CORBA::SystemException
    ));
  
  // TAO_IDL - Generated from
  // e:\ric\ace_wrappers\tao\tao_idl\be\be_visitor_operation/proxy_impl_xh.cpp:24
  
  virtual void release (
      CORBA_Object *_collocated_tao_target_
    )
    ACE_THROW_SPEC ((
      CORBA::SystemException
    ));
  
  // TAO_IDL - Generated from
  // e:\ric\ace_wrappers\tao\tao_idl\be\be_visitor_operation/proxy_impl_xh.cpp:24
  
  virtual char * setEvent (
      CORBA_Object *_collocated_tao_target_,
      const char * eventID
    )
    ACE_THROW_SPEC ((
      CORBA::SystemException
    ));
  
  // TAO_IDL - Generated from
  // e:\ric\ace_wrappers\tao\tao_idl\be\be_visitor_operation/proxy_impl_xh.cpp:24
  
  virtual CORBA::Long getNumberOfEvents (
      CORBA_Object *_collocated_tao_target_
    )
    ACE_THROW_SPEC ((
      CORBA::SystemException
    ));
  
  // TAO_IDL - Generated from
  // e:\ric\ace_wrappers\tao\tao_idl\be\be_visitor_operation/proxy_impl_xh.cpp:24
  
  virtual char * getEventTitle (
      CORBA_Object *_collocated_tao_target_
    )
    ACE_THROW_SPEC ((
      CORBA::SystemException
    ));
  
  // TAO_IDL - Generated from
  // e:\ric\ace_wrappers\tao\tao_idl\be\be_visitor_operation/proxy_impl_xh.cpp:24
  
  virtual ::HepRep_ptr getEventData (
      CORBA_Object *_collocated_tao_target_,
      const char * dataFormat
    )
    ACE_THROW_SPEC ((
      CORBA::SystemException
    ));
};

//
//             End Remote Proxy Impl. Declaration
///////////////////////////////////////////////////////////////////////

// The Proxy Brokers are used by each interface to get
// the right proxy for performing a call. In the new 
// collocation scheme, the proxy to be used can vary on
// a call by call basis.

///////////////////////////////////////////////////////////////////////
//                 Base Proxy Broker Declaration 
//

// TAO_IDL - Generated from
// e:\ric\ace_wrappers\tao\tao_idl\be\be_visitor_interface/base_proxy_broker_ch.cpp:35

class  _TAO_HepEventServer_Proxy_Broker
{
public:
  virtual ~_TAO_HepEventServer_Proxy_Broker (void);
  virtual _TAO_HepEventServer_Proxy_Impl &select_proxy (
      HepEventServer *object
      ACE_ENV_ARG_DECL_WITH_DEFAULTS
    ) = 0;
  
protected:
  _TAO_HepEventServer_Proxy_Broker (void);
  
};

//
//              End Base Proxy Broker Declaration 
///////////////////////////////////////////////////////////////////////


///////////////////////////////////////////////////////////////////////
//                 Remote Proxy Broker Declaration 
//

// TAO_IDL - Generated from
// e:\ric\ace_wrappers\tao\tao_idl\be\be_visitor_interface/remote_proxy_broker_ch.cpp:40

class  _TAO_HepEventServer_Remote_Proxy_Broker
  : public virtual _TAO_HepEventServer_Proxy_Broker
{
public: 
  _TAO_HepEventServer_Remote_Proxy_Broker (void);
  
  virtual ~_TAO_HepEventServer_Remote_Proxy_Broker (void);
  
  virtual _TAO_HepEventServer_Proxy_Impl &select_proxy (
      HepEventServer *object
      ACE_ENV_ARG_DECL
    );
  
private:
  _TAO_HepEventServer_Remote_Proxy_Impl remote_proxy_impl_;

public:
  // This member function is used to get an handle to the unique instance
  // of the Remote Proxy Broker that is available for a given
  // interface.
  static _TAO_HepEventServer_Remote_Proxy_Broker *the_TAO_HepEventServer_Remote_Proxy_Broker (void);
};

//
//              End Remote Proxy Broker Declaration 
///////////////////////////////////////////////////////////////////////

#endif /* end #if !defined */

// TAO_IDL - Generated from
// e:\ric\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:44

extern  ::CORBA::TypeCode_ptr  _tc_HepEventServer;

// Proxy Broker Factory function pointer declarations.

// TAO_IDL - Generated from
// e:\ric\ace_wrappers\tao\tao_idl\be\be_visitor_root/root.cpp:80

extern 
_TAO_HepEventServer_Proxy_Broker *
(*_TAO_HepEventServer_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

// TAO_IDL - Generated from
// e:\ric\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, HepEventServer_ptr); // copying
 void operator<<= (CORBA::Any &, HepEventServer_ptr *); // non-copying
 CORBA::Boolean operator>>= (const CORBA::Any &, HepEventServer_ptr &);

// TAO_IDL - Generated from
// e:\ric\ace_wrappers\tao\tao_idl\be\be_visitor_root/cdr_op.cpp:48

#ifndef __ACE_INLINE__

// TAO_IDL - Generated from
// e:\ric\ace_wrappers\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:55

 CORBA::Boolean operator<< (TAO_OutputCDR &, const HepEventServer_ptr );
 CORBA::Boolean operator>> (TAO_InputCDR &, HepEventServer_ptr &);

// TAO_IDL - Generated from
// e:\ric\ace_wrappers\tao\tao_idl\be\be_visitor_root/cdr_op.cpp:64

#endif /* __ACE_INLINE__ */

// TAO_IDL - Generated from
// be\be_codegen.cpp:1016

#if defined (__ACE_INLINE__)
#include "HepEventServerC.i"
#endif /* defined INLINE */

#if defined(_MSC_VER) && (_MSC_VER >= 1200)
#pragma warning(pop)
#endif /* _MSC_VER */

#if defined (__BORLANDC__)
#pragma option pop
#endif /* __BORLANDC__ */

#endif /* ifndef */

